
#include "logo.h"
#include "main.h"
#include "../cfg/main.h"

//#include "U8glib.h"

static unsigned char _logo[] PROGMEM = {
  0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x7F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0E, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x01, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x70, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x01, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE1, 0x03, 0xC0, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xFD, 0x1F, 0xC0, 0x19, 0x00, 0x00, 0x00, 
  0x80, 0x1F, 0x7C, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x07, 0xE0, 0x80, 
  0xE3, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0xC1, 0x00, 0x0F, 0x00, 0x00, 
  0x80, 0x01, 0x80, 0xC3, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 
  0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x60, 0x00, 0x00, 
  0x80, 0x00, 0x00, 0x36, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 
  0x00, 0x80, 0x01, 0x00, 0x80, 0x00, 0x00, 0x3C, 0x02, 0x80, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x7C, 
  0x3D, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00, 0x0C, 0x70, 0x00, 0x06, 0x00, 
  0x00, 0x01, 0x00, 0x00, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x0C, 0x00, 
  0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x06, 0x18, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x06, 0x18, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x00, 0x00, 0x01, 0x08, 0x00, 
  0x00, 0x06, 0x0C, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x06, 0x7F, 0x00, 
  0x00, 0x00, 0x02, 0x00, 0x00, 0xC6, 0xEB, 0x01, 0x00, 0x02, 0x01, 0x00, 
  0x00, 0xF6, 0x80, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x0C, 0x00, 0x62, 0x00, 0x00, 
  0x00, 0xFF, 0x00, 0x1C, 0x00, 0x12, 0x00, 0x00, 0x40, 0xE0, 0x01, 0x18, 
  0x00, 0x08, 0x00, 0x00, 0x20, 0x80, 0x03, 0x30, 0x00, 0x0C, 0x00, 0x00, 
  0x10, 0x00, 0x06, 0x30, 0x00, 0x02, 0x00, 0x00, 0x08, 0x00, 0x0E, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x0C, 0x60, 0x00, 0xFE, 0x00, 0x00, 
  0x02, 0x00, 0x18, 0xC0, 0x80, 0xFF, 0x03, 0x00, 0x01, 0x00, 0x18, 0xC0, 
  0xC0, 0xFF, 0x07, 0x40, 0x00, 0x00, 0x30, 0xC0, 0xE0, 0xC7, 0x0F, 0x40, 
  0x00, 0x00, 0x30, 0xC0, 0xE0, 0x01, 0x0F, 0x20, 0x00, 0x00, 0x30, 0xC0, 
  0xF0, 0x38, 0x1E, 0x08, 0x00, 0x00, 0x30, 0xC0, 0xF0, 0x7C, 0x1E, 0x00, 
  0x00, 0x00, 0x30, 0xC0, 0x78, 0xFE, 0x1C, 0x06, 0x00, 0x00, 0x30, 0xC0, 
  0x78, 0xFE, 0x1C, 0x00, 0x00, 0x00, 0x18, 0xC0, 0x78, 0xFE, 0x9C, 0x01, 
  0x00, 0x00, 0x18, 0x60, 0x7C, 0x7C, 0x9E, 0x00, 0x00, 0x00, 0x1C, 0x60, 
  0xFC, 0x38, 0x1E, 0x2A, 0x01, 0x00, 0x0E, 0x30, 0xFC, 0x01, 0x0F, 0x80, 
  0x58, 0x01, 0xFE, 0x3F, 0xFC, 0x87, 0x0F, 0x00, 0x00, 0x14, 0xEF, 0x0F, 
  0xFE, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFE, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

void ViewLogo::draw(U8G2 &u8g2) {
    /*
#if HWVER == 4
#define FONTNAME    u8g2_font_open_iconic_other_8x_t
#define FONTSIZE    56
#else
#define FONTNAME    u8g2_font_open_iconic_other_4x_t
#define FONTSIZE    28
#endif
    
    u8g2.setFont(FONTNAME);
    u8g2.drawGlyph((u8g2.getDisplayWidth()-FONTSIZE)/2, (u8g2.getDisplayHeight()-32)/2 + FONTSIZE/2, 0x40);
    */

    u8g2.drawXBMP( (u8g2.getDisplayWidth()-64)/2, 0, 64, 64, _logo );
    
    char s[40];
    u8g2.setFont(u8g2_font_ImpactBits_tr);
    strcpy_P(s, PSTR("XDEYA"));
    u8g2.drawStr((u8g2.getDisplayWidth()-u8g2.getStrWidth(s))/2, u8g2.getDisplayHeight()-20, s);
    strcpy_P(s, PSTR("v" FWVER_NAME));
    u8g2.drawStr((u8g2.getDisplayWidth()-u8g2.getStrWidth(s))/2, u8g2.getDisplayHeight()-5, s);
}

void ViewLogo::process() {
    waitn ++;
    if (waitn < LOGO_TIME)
        return;
    
    setViewMain(cfg.d().dsplpwron);
}


static ViewLogo vLogo;
void setViewLogo() { viewSet(vLogo); }
